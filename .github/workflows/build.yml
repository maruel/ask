# Copyright 2025 Marc-Antoine Ruel. All rights reserved.
# Use of this source code is governed under the Apache License, Version 2.0
# that can be found in the LICENSE file.

name: Build Go Executables

on:
  push:
    branches: [main, "test-v*"]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""
          - goos: windows
            goarch: amd64
            suffix: ".exe"
          - goos: windows
            goarch: arm64
            suffix: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Get dependencies
        run: go mod download
      - name: Find executables in cmd/
        id: find-executables
        run: |
          executables=$(find cmd -maxdepth 1 -mindepth 1 -type d -exec basename {} \;)
          echo "executables<<EOF" >> $GITHUB_OUTPUT
          echo "$executables" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Build executables
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p build/${{ matrix.goos }}-${{ matrix.goarch }}
          while IFS= read -r executable; do
            if [ -n "$executable" ]; then
              echo "Building $executable for ${{ matrix.goos }}/${{ matrix.goarch }}"
              go build -ldflags="-s -w" -o build/${{ matrix.goos }}-${{ matrix.goarch }}/${executable}${{ matrix.suffix }} ./cmd/$executable
            fi
          done <<< "${{ steps.find-executables.outputs.executables }}"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/${{ matrix.goos }}-${{ matrix.goarch }}/
          retention-days: 5

  # Create release if this is a tag push.
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/refs/test-v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts
      - name: Prepare release assets
        run: |
          mkdir -p release
          cd artifacts
          for dir in binaries-*; do
            platform=$(echo $dir | sed 's/binaries-//')
            cd "$dir"
            tar -czf "../../release/binaries-${platform}.tar.gz" *
            cd ..
          done
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.tar.gz
          draft: ${{!startsWith(github.ref , 'refs/tags/v')}}
          prerelease: ${{!startsWith(github.ref , 'refs/tags/v')}}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
